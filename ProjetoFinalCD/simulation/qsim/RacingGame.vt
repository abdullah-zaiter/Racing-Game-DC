// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/03/2017 12:53:33"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    TesteMatriz
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module TesteMatriz_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCK_50;
reg treg_GPIO_10;
reg treg_GPIO_11;
reg treg_GPIO_12;
reg treg_GPIO_13;
reg treg_GPIO_14;
reg treg_GPIO_15;
reg treg_GPIO_16;
reg treg_GPIO_17;
reg treg_GPIO_110;
reg treg_GPIO_111;
reg treg_GPIO_112;
reg treg_GPIO_113;
reg treg_GPIO_114;
reg treg_GPIO_115;
reg treg_GPIO_116;
reg treg_GPIO_117;
// wires                                               
wire GPIO_10;
wire GPIO_11;
wire GPIO_12;
wire GPIO_13;
wire GPIO_14;
wire GPIO_15;
wire GPIO_16;
wire GPIO_17;
wire GPIO_110;
wire GPIO_111;
wire GPIO_112;
wire GPIO_113;
wire GPIO_114;
wire GPIO_115;
wire GPIO_116;
wire GPIO_117;

// assign statements (if any)                          
assign GPIO_10 = treg_GPIO_10;
assign GPIO_11 = treg_GPIO_11;
assign GPIO_12 = treg_GPIO_12;
assign GPIO_13 = treg_GPIO_13;
assign GPIO_14 = treg_GPIO_14;
assign GPIO_15 = treg_GPIO_15;
assign GPIO_16 = treg_GPIO_16;
assign GPIO_17 = treg_GPIO_17;
assign GPIO_110 = treg_GPIO_110;
assign GPIO_111 = treg_GPIO_111;
assign GPIO_112 = treg_GPIO_112;
assign GPIO_113 = treg_GPIO_113;
assign GPIO_114 = treg_GPIO_114;
assign GPIO_115 = treg_GPIO_115;
assign GPIO_116 = treg_GPIO_116;
assign GPIO_117 = treg_GPIO_117;
TesteMatriz i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK_50(CLOCK_50),
	.GPIO_10(GPIO_10),
	.GPIO_11(GPIO_11),
	.GPIO_12(GPIO_12),
	.GPIO_13(GPIO_13),
	.GPIO_14(GPIO_14),
	.GPIO_15(GPIO_15),
	.GPIO_16(GPIO_16),
	.GPIO_17(GPIO_17),
	.GPIO_110(GPIO_110),
	.GPIO_111(GPIO_111),
	.GPIO_112(GPIO_112),
	.GPIO_113(GPIO_113),
	.GPIO_114(GPIO_114),
	.GPIO_115(GPIO_115),
	.GPIO_116(GPIO_116),
	.GPIO_117(GPIO_117)
);
initial 
begin 
#10000000 $finish;
end 
initial 
begin 
#10000000 $finish;
end 
endmodule

